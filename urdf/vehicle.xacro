<robot name="autoware" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find vehicle_model)/urdf/wheel.xacro" />
  <xacro:include filename="$(find vehicle_model)/urdf/steering.xacro" />
  <xacro:arg name="wheel_radius" default="0.341"/>
  <xacro:arg name="wheel_width" default="0.225"/>
  <xacro:arg name="wheel_base" default="2.950"/>
  <xacro:arg name="wheel_tread" default="1.55"/>
  <xacro:arg name="vehicle_mass" default="5000.0"/>
  <xacro:arg name="vehicle_length" default="4.82"/>
  <xacro:arg name="vehicle_width" default="1.81"/>
  <xacro:arg name="vehicle_height" default="1.5"/>

  <xacro:arg name="vehicle_mass_height" default="0.5"/>
  <xacro:property name="pi" value="3.1415926835897931" />

  <link name="base_link"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 $(arg wheel_radius)"/>
    <child  link="wheel_base_link"/>
  </joint>  
  <link name="wheel_base_link">
    <inertial>
      <origin xyz="${$(arg wheel_base)/2} 0 0" rpy="0 0 0"/>
      <mass value="$(arg vehicle_mass)"/>
      <inertia ixx="${($(arg vehicle_width)*$(arg vehicle_width)+$(arg vehicle_mass_height)*$(arg vehicle_mass_height))*$(arg vehicle_mass)/12.0}" ixy="0.0" ixz="0.0" 
               iyy="${($(arg vehicle_length)*$(arg vehicle_length)+$(arg vehicle_mass_height)*$(arg vehicle_mass_height))*$(arg vehicle_mass)/12.0}" iyz="0.0" 
               izz="${($(arg vehicle_width)*$(arg vehicle_width)+$(arg vehicle_length)*$(arg vehicle_length))*$(arg vehicle_mass)/12.0}"/>
    </inertial>
    <visual>
      <origin xyz="${$(arg wheel_base)/2} 0 ${$(arg vehicle_height)/2}" rpy="0 0 0"/>
      <geometry>
        <box size="$(arg vehicle_length) $(arg vehicle_width) $(arg vehicle_height)"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="${$(arg wheel_base)/2} 0 ${$(arg vehicle_height)/2}" rpy="0 0 0"/>
      <geometry>
        <box size="$(arg vehicle_length) 0.9 $(arg vehicle_height)"/>
      </geometry>
    </collision>
  </link>

  <xacro:steering_macro suffix="steering_right_front" parent="wheel_base_link" x="$(arg wheel_base)" y="${-1*$(arg wheel_tread)/2}" yaw="0" length="$(arg wheel_width)"/>
  <xacro:steering_macro suffix="steering_left_front" parent="wheel_base_link" x="$(arg wheel_base)" y="${$(arg wheel_tread)/2}" yaw="0" length="$(arg wheel_width)"/>

  <xacro:wheel_macro suffix="wheel_right_front" parent="steering_right_front_link" x="0" y="0" yaw="${pi}" radius="$(arg wheel_radius)" width="$(arg wheel_width)"/>
  <xacro:wheel_macro suffix="wheel_left_front" parent="steering_left_front_link" x="0" y="0" yaw="${0}" radius="$(arg wheel_radius)" width="$(arg wheel_width)"/>
  <!-- <xacro:wheel_macro suffix="wheel_right_front" parent="wheel_base_link" x="$(arg wheel_base)" y="${-1*$(arg wheel_tread)/2}" yaw="${pi}" radius="$(arg wheel_radius)" width="$(arg wheel_width)"/>
  <xacro:wheel_macro suffix="wheel_left_front" parent="wheel_base_link" x="$(arg wheel_base)" y="${$(arg wheel_tread)/2}" yaw="${0}" radius="$(arg wheel_radius)" width="$(arg wheel_width)"/> -->
  <xacro:wheel_macro suffix="wheel_right_rear" parent="wheel_base_link" x="0" y="${-1*$(arg wheel_tread)/2}" yaw="${pi}" radius="$(arg wheel_radius)" width="$(arg wheel_width)"/>
  <xacro:wheel_macro suffix="wheel_left_rear" parent="wheel_base_link" x="0" y="${$(arg wheel_tread)/2}" yaw="${0}" radius="$(arg wheel_radius)" width="$(arg wheel_width)"/>

  <!-- actuator -->
 	<xacro:include filename="$(find vehicle_model)/urdf/actuator.xacro"/>

  <!-- gazebo -->
 	<xacro:include filename="$(find vehicle_model)/urdf/wheel.gazebo"/>
 	<xacro:include filename="$(find vehicle_model)/urdf/steering.gazebo"/>
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/autoware</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_joint_state_publisher.so" name="joint_state_publisher">
      <jointName>wheel_left_rear_joint, wheel_right_rear_joint, steering_left_front_joint, steering_right_front_joint</jointName>
      <updateRate>50.0</updateRate>
      <robotNamespace>/autoware</robotNamespace>
      <alwaysOn>true</alwaysOn>
    </plugin>
  </gazebo>
</robot>